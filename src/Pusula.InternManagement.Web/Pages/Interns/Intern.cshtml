@page
@using Microsoft.Extensions.Localization;
@using Pusula.InternManagement.Localization;
@using Pusula.InternManagement.Universities;
@using Pusula.InternManagement.UniversityDepartments;
@model Pusula.InternManagement.Web.Pages.Interns.InternModel
@inject IStringLocalizer<InternManagementResource> L
@inject IUniversityRepository _universityRepository
@inject IUniversityDepartmentRepository _universityDepartmentRepository
@section scripts{
    <abp-script src="/Pages/Interns/Intern.js" />
}

@{
    var startDate = Model.Intern.StartDate;
    var endDate = Model.Intern.EndDate;
    var dayOfWeek = (int)startDate.DayOfWeek;
    var currentWeekStart = startDate.AddDays(-dayOfWeek + 1);
    var weeks = (endDate - currentWeekStart).Days / 7 + 1;

    var diff = (endDate - DateTime.Now).TotalSeconds;
    var progressValue = Math.Max(0, Math.Min(100, (int)(diff / (endDate - Model.Intern.StartDate).TotalSeconds * 100)));
}

<abp-card>
    <abp-card-header class="text-center">
        <div class="m-3 h2">
            <abp-card-title>@Model.Intern.Name</abp-card-title>
            <abp-card-subtitle>@Model.Intern.DepartmentName</abp-card-subtitle>
        </div>
    </abp-card-header>
    <abp-card-body>
        <abp-row>
            <abp-column size-lg="_6">
                <div class="mx-3 mb-2">
                    <h3 class="mb-3">@L["Contact"]</h3>
                    <abp-card-text class="mb-1 h5">@L["Email"] = @Model.Intern.Email</abp-card-text>
                    <abp-card-text class="h5">@L["PhoneNumber"] = @Model.Intern.PhoneNumber</abp-card-text>
                </div>
            </abp-column>
            <abp-column size-lg="_6">
                <div class="mx-3 mb-3">
                    <h3>@L["InternshipPeriod"]</h3>
                    <div style="display: flex; justify-content: space-between;">
                        <abp-card-text>@Model.Intern.StartDate.ToString("dd MMMM yyy")</abp-card-text>
                        <abp-card-text>@Model.Intern.EndDate.ToString("dd MMMM yyy")</abp-card-text>
                    </div>
                    <abp-progress-bar value="100-progressValue" min-value="0" max-value="100">
                        @(100 - progressValue)%

                    </abp-progress-bar>
                </div>
            </abp-column>
        </abp-row>


    </abp-card-body>
</abp-card>


<div style="overflow-x: auto; overflow-y: auto; max-height: 500px;">
    <abp-card style="min-width:min-content;">
        <abp-card-header class="h3">
            <abp-card-title>@L["Works"]</abp-card-title>
        </abp-card-header>
        <abp-card-body class="mx-3">
            <div class="d-flex flex-row mx-3">
                @for (int i = 1; i <= weeks; i++)
                {
                    var currentWeekEnd = currentWeekStart.AddDays(6); // haftanın bitiş tarihi
                    var currentWeekWorks = Model.Intern.Works
                    .Where(w => w.Date >= currentWeekStart && w.Date <= currentWeekEnd)
                    .ToList();

                    <div class="ml-2" style="min-width:300px;">
                        <div style="position: sticky; top: 20px; background-color: white; z-index: 1;">
                            <h4>@L["Week"] @(i)</h4><h6>(@currentWeekStart.ToShortDateString() - @currentWeekEnd.ToShortDateString())</h6>
                        </div>
                        @if (currentWeekWorks.Count == 0)
                        {
                            <hr />
                            <p>No works for this week.</p>
                        }
                        else
                        {
                            foreach (var work in currentWeekWorks)
                            {
                                <hr />
                                <div class="mx-1">
                                    <abp-card-title>
                                        <strong>@work.Name</strong> - @work.Date.ToShortDateString()
                                    </abp-card-title>
                                    <abp-card-subtitle>@work.Description</abp-card-subtitle>
                                </div>
                            }
                        }
                    </div>

                    // sonraki haftanın başlangıç tarihini hesapla
                    currentWeekStart = currentWeekStart.AddDays(7);
                }
            </div>
        </abp-card-body>
    </abp-card>
</div>


<div style="overflow-x: auto; overflow-y: auto;">
    <abp-card class="mt-3" style="min-width:min-content">
        <abp-card-header class="h3">
            <abp-card-title>@L["Educations"]</abp-card-title>
        </abp-card-header>
        <abp-card-body class="mx-3">
            <div class="d-flex flex-row mx-3">
                @if (!Model.Intern.Educations.Any())
                {
                    <abp-card-title>Education information for the intern could not be found!!!</abp-card-title>
                }
                @foreach (var education in Model.Intern.Educations)
                {
                    <div class="ml-2" style="min-width:400px;">
                        <abp-card abp-border="Secondary" style="margin-right: 35px;min-height: 350px;max-width:500px;">
                            <abp-card-header class="h3">
                                <abp-card-title>@education.Name</abp-card-title>
                            </abp-card-header>
                            <abp-card-body>
                                <abp-card-text>@_universityRepository.GetAsync(education.UniversityId).Result.Name</abp-card-text>
                                <abp-card-text>@_universityDepartmentRepository.GetAsync(education.UniversityDepartmentId).Result.Name</abp-card-text>
                                <abp-card-text>@L["Grade." + (int) @education.Grade]</abp-card-text>
                                <abp-card-text>@education.GradePointAverage.ToString("0.00")</abp-card-text>
                            </abp-card-body>
                            <abp-card-footer>
                                <div style="display: flex; justify-content: space-between;">
                                    <abp-card-text>@education.StartDate.ToString("MMMM yyyy")</abp-card-text>
                                    <abp-card-text>@education.EndDate.ToString("MMMM yyyy")</abp-card-text>
                                </div>
                                @{
                                    var educationEndDate = education.EndDate;
                                    var educationDateDiff = (educationEndDate - DateTime.Now).TotalSeconds;
                                    var value = Math.Max(0, Math.Min(100, (int)(educationDateDiff / (educationEndDate - education.StartDate).TotalSeconds * 100)));
                                }
                                <abp-progress-bar value="100-value" min-value="0" max-value="100">
                                    @(100 - value)%
                                </abp-progress-bar>
                            </abp-card-footer>
                        </abp-card>
                    </div>
                }
            </div>
        </abp-card-body>
    </abp-card>
</div>

<div style="overflow-x: auto; overflow-y: auto;">
    <abp-card class="mt-3" style="min-width:min-content">
        <abp-card-header class="h3">
            <abp-card-title>@L["Experiences"]</abp-card-title>
        </abp-card-header>
        <abp-card-body class="mx-3">
            <div class="d-flex flex-row mx-3">
                @if (!Model.Intern.Experiences.Any())
                {
                    <abp-card-title>Experience information for the intern could not be found!!!</abp-card-title>
                }
                @foreach (var experience in Model.Intern.Experiences)
                {
                    <div class="ml-2" style="min-width:400px;">
                        <abp-card abp-border="Secondary" style="margin-right: 35px;min-height: 350px;max-width:500px;">
                            <abp-card-header class="h3">
                                <abp-card-title>@experience.Name</abp-card-title>
                            </abp-card-header>
                            <abp-card-body>
                                <abp-card-text>@experience.Description</abp-card-text>
                            </abp-card-body>
                            <abp-card-footer>
                                <div style="display: flex; justify-content: space-between;">
                                    <abp-card-text>@experience.StartDate.ToString("MMMM yyyy")</abp-card-text>
                                    <abp-card-text>@experience.EndDate.ToString("MMMM yyyy")</abp-card-text>
                                </div>
                                @{
                                    var experienceEndDate = experience.EndDate;
                                    var experienceDiff = (experienceEndDate - DateTime.Now).TotalSeconds;
                                    var value = Math.Max(0, Math.Min(100, (int)(experienceDiff / (experienceEndDate - experience.StartDate).TotalSeconds * 100)));
                                }
                                <abp-progress-bar value="100-value" min-value="0" max-value="100">
                                    @(100 - value)%
                                </abp-progress-bar>
                            </abp-card-footer>
                        </abp-card>
                    </div>
                }
            </div>
        </abp-card-body>
    </abp-card>
</div>

<div style="overflow-x: auto; overflow-y: auto;">
    <abp-card class="mt-3" style="min-width:min-content;">
        <abp-card-header class="h3">
            <abp-card-title>@L["Projects"]</abp-card-title>
        </abp-card-header>
        <abp-card-body class="mx-3">
            <div class="d-flex flex-row mx-3">
                @if (!Model.Intern.Projects.Any())
                {
                    <abp-card-title>Project information for the intern could not be found!!!</abp-card-title>
                }
                @foreach (var project in Model.Intern.Projects)
                {
                    <div class="ml-2" style="min-width: 400px;">
                        <abp-card abp-border="Secondary" style="margin-right: 35px;min-height: 350px;max-width:500px;">
                            <abp-card-header class="h3">
                                <abp-card-title>@project.Name</abp-card-title>
                            </abp-card-header>
                            <abp-card-body>
                                <abp-card-text>@project.Description</abp-card-text>
                            </abp-card-body>
                            <abp-card-footer>
                                <div style="display: flex; justify-content: space-between;">
                                    <abp-card-text>@project.StartDate.ToString("MMMM yyyy")</abp-card-text>
                                    <abp-card-text>@project.EndDate.ToString("MMMM yyyy")</abp-card-text>
                                </div>
                                @{
                                    var projectEndDate = project.EndDate;
                                    var projectDiff = (projectEndDate - DateTime.Now).TotalSeconds;
                                    var value = Math.Max(0, Math.Min(100, (int)(projectDiff / (projectEndDate - project.StartDate).TotalSeconds * 100)));
                                }
                                <abp-progress-bar value="100-value" min-value="0" max-value="100">
                                    @(100 - value)%
                                </abp-progress-bar>
                            </abp-card-footer>
                        </abp-card>
                    </div>
                }
            </div>
        </abp-card-body>
    </abp-card>
</div>


<div style="overflow-x: auto; overflow-y: auto;">
    <abp-card class="mt-3" style="min-width:min-content;">
        <abp-card-header class="h3">
            <abp-card-title>@L["Courses"]</abp-card-title>
        </abp-card-header>
        <abp-card-body class="mx-3">
            <div class="d-flex flex-row mx-3">
                @if (!Model.Intern.Courses.Any())
                {
                    <abp-card-title>Course information for the intern could not be found!!!</abp-card-title>
                }
                @foreach (var course in Model.Intern.Courses)
                {
                    <div class="ml-2" style="min-width: 400px;">
                        <abp-card abp-border="Secondary" style="margin-right: 35px;min-height: 350px;max-width:500px;">
                            <abp-card-header class="h3">
                                <abp-card-title>@course.Name</abp-card-title>
                            </abp-card-header>
                            <abp-card-body>
                                <abp-card-text>@course.Description</abp-card-text>
                            </abp-card-body>
                            <abp-card-footer>
                                <abp-card-text>@course.PublishDate.ToString("MMMM yyy")</abp-card-text>
                            </abp-card-footer>
                        </abp-card>
                    </div>
                }
            </div>
        </abp-card-body>
    </abp-card>
</div>



<div style="overflow-x: auto; overflow-y: auto;">
    <abp-card class="mt-3" style="min-width:min-content;">
        <abp-card-header class="h3">
            <abp-card-title>@L["Files"]</abp-card-title>
        </abp-card-header>
        <abp-card-body class="mx-3">
            <div class="d-flex flex-row mx-3">
                @if (!Model.Intern.Files.Any())
                {
                    <abp-card-title>File information for the intern could not be found!!!</abp-card-title>
                }
                @foreach (var file in Model.Intern.Files)
                {
                    <div class="ml-2">
                        <abp-card style="margin-right: 35px;max-height: 350px;max-width:350px;">
                            <abp-card-header class="h3">
                            </abp-card-header>
                            <abp-card-body>
                                <abp-card-title>
                                    @file.Name <abp-button id="downloadButton"
                                                           onclick="downloadFile('@file.InternId','@file.Name')"
                                                       button-type="Primary"
                                                       icon="download"
                                                       size="Small" />
                                </abp-card-title>
                            </abp-card-body>
                            <abp-card-footer>
                            </abp-card-footer>
                        </abp-card>
                    </div>
                }
            </div>
        </abp-card-body>
    </abp-card>
</div>
